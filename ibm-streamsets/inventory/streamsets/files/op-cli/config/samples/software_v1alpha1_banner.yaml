apiVersion: software.streamsets.ibm.com/v1alpha1
kind: Banner
metadata:
  name: banner-sample
spec:
  # Default values copied from <project_dir>/helm-charts/banner/values.yaml
  banner-deploy:
    appName: banner
    application:
      args: /apps/bin/streamsets banner run
      containerRegistry: cp.stg.icr.io/cp/cpd/ibm-streamsets-
      dbUpgradeArgs: /apps/bin/streamsets banner prod-update-schema --confirm prod-update-schema
        && /apps/bin/streamsets banner seed-data --confirm seed-data
      dpmcliVersion: software-da90442114a1a46b25751d498687b0969cf5dd45
      imageName: banner-service
      imageSuffix: -amd64
      imageTag: latest
      port: 9000
    cloudProvider: default
    cloudSqlProxy:
      enabled: false
    clusterDomain: svc.cluster.local
    dbHost: ibm-streamsets-self-managed-mysql-mysql-deploy-headless
    env:
      APP_CONF: /streamsets/etc
      APP_JAVA_OPTS: -Dlog4j2.formatMsgNoLookups=true -Djava.util.logging.config.file=/streamsets/etc/logging.properties
        -Ddd.service={{ .Values.appName }} -Ddd.logs.injection=true -Ddd.env={{ .Release.Namespace
        }} -XX:+UseStringDeduplication -XX:MaxDirectMemorySize=10M -XX:MaxMetaspaceSize=204800K
        -XX:ReservedCodeCacheSize=240M -Xss1M -Xmx1024M -XX:+CrashOnOutOfMemoryError
        -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/diagnostics -XX:ErrorFile=/diagnostics/app.err
      APP_LOG: /var/log/app.log
      DD_ENV: '{{ .Release.Namespace }}'
      DD_SERVICE: '{{ .Values.appName }}'
      DD_VERSION: '{{ .Values.application.imageTag }}'
      SPRING_PROFILES_ACTIVE: schSecurity
    global:
      host: https://cpd-zen.apps.rosa.rosa.sl9v.p3.openshiftapps.com
    healthCheck:
      path: /banner/public/v1/health
      port: 9000
    heapShipper:
      enabled: false
    hpa:
      maxReplicas: 4
      minReplicas: 2
    istio:
      enabled: true
    nameSpaceServiceAccount: streamsets
    properties:
      app.ipauth.ipAuthConfigMap.enforcement.cache.lru_size: "100000"
      app.ipauth.ipAuthConfigMap.enforcement.cache.ttl_error_sec: "30"
      app.ipauth.ipAuthConfigMap.enforcement.cache.ttl_sec: "150"
      app.ipauth.ipAuthConfigMap.enforcement.cluster_type: default
      app.ipauth.ipAuthConfigMap.enforcement.disabled.prefixes: /*/api-docs,/swagger-ui,/swagger-ui.html,/webjars/springfox-swagger-ui,/swagger-resources,/*/rest/swagger.json,/*/public,/error
      app.ipauth.ipAuthConfigMap.enforcement.error_log_interval_sec: "0"
      app.ipauth.ipAuthConfigMap.enforcement.file.filename: /apps/apps/banner/etc/ip-auth.json
      app.ipauth.ipAuthConfigMap.enforcement.internal_only.prefixes: /nothing
      app.ipauth.ipAuthConfigMap.enforcement.mode: disabled
      app.ipauth.ipAuthConfigMap.enforcement.resource_pool.size: "50"
      app.ipauth.ipAuthConfigMap.enforcement.resource_pool.timeout_sec: "30"
      app.ipauth.ipAuthConfigMap.enforcement.rest_client.base_url: http://security.{{
        .Release.Namespace }}.{{ .Values.clusterDomain }}:18631/security/rest/v1/ipAuthorizer
      app.ipauth.ipAuthConfigMap.enforcement.rest_client.timeout_initial_sec: "45"
      app.ipauth.ipAuthConfigMap.enforcement.rest_client.timeout_update_sec: "5"
      coffee-boots.cache.spec.schOrgInfo: maximumSize=5000,expireAfterWrite=60s
      coffee-boots.cache.spec.schUserInfo: maximumSize=10000,expireAfterWrite=60s
      dpm.app.security.url: http://security:18631
      dpm.appAuthToken: ${token}
      dpm.base.url: '{{ .Values.global.host }}/streamsets/main/banner'
      dpm.componentId: ${componentId}
      dpm.components.fetch.batch.size: "500"
      dpm.components.fetch.initial.delay.secs: "60"
      dpm.components.fetch.interval.secs: "60"
      dpm.connectionTimeout.millis: "60000"
      dpm.domainForRequestedUrlCookie: hub.streamsets.com
      dpm.security.validationTokenFrequency.secs: "60"
      dpm.useQueryStringForRequestedUrl: "false"
      rest.errors.includeExceptionDetails: "false"
      retry.maxAttempts: "3"
      retry.maxDelayMs: "1000"
      scheduling.awaitTermination.secs: "10"
      scheduling.threadPool.size: "5"
      server.error.path: /error
      server.port: "9000"
      server.servlet.context-path: /{{ .Values.appName }}
      spring.config.import: configtree:/streamsets/etc/secrets/
      spring.datasource.driverClassName: org.mariadb.jdbc.Driver
      spring.datasource.password: ${app.db.pass}
      spring.datasource.url: jdbc:mysql://{{ .Values.dbHost }}:3306/{{ .Release.Namespace
        }}banner?permitMysqlScheme=true&sslMode=trust
      spring.datasource.username: ${app.db.user}
      spring.jpa.properties.hibernate.dialect: org.hibernate.dialect.MySQL8Dialect
      spring.jpa.properties.hibernate.hbm2ddl.auto: none
      spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults: "false"
      spring.liquibase.change-log: classpath:/db/changelog/db-changelog-master.xml
      spring.liquibase.enabled: "false"
      streamsets.metrics.datadog.apiKey: ${api.key}
      streamsets.metrics.datadog.enabled: "true"
      streamsets.metrics.datadog.step: "60"
      streamsets.metrics.tags.env: '{{ .Release.Namespace }}'
      streamsets.metrics.tags.service: '{{ .Values.appName }}'
      streamsets.metrics.tags.version: '{{ .Values.application.imageTag }}'
    resources:
      limits:
        cpu: "2"
        memory: 3Gi
      requests:
        cpu: "2"
        memory: 3Gi
    secrets:
    - bootstrap: true
      name: banner-secret
      secrets:
        app.db.pass: app.db.pass
        app.db.user: app.db.user
        componentId: componentId
        token: token
    - name: datadog-agent
      secrets:
        datadog.api.key: datadog.api.key
    - name: dpm-admin
      secrets:
        dpm.admin.password: dpm.admin.password
        dpm.admin.user: dpm.admin.user
    - name: db-service-account
      secrets:
        db.service.pass: db.service.pass
        db.service.user: db.service.user
    virtualService:
      gateway: '{{ .Release.Namespace }}-sch-gateway'
      prefixes:
      - /streamsets/main/banner
      rewrite: /banner
  
  
